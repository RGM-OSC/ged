#!/bin/bash
#
# chkconfig: 345 65 35
# description: GED daemon launcher

#------------------------------------------------------------
# include directives
#------------------------------------------------------------
. /etc/init.d/functions
. /etc/sysconfig/network

#------------------------------------------------------------
# variable definition
#------------------------------------------------------------

# binary, config
ged_bin=/srv/eyesofnetwork/ged/bin/ged
ged_cfg=/srv/eyesofnetwork/ged/etc/ged.cfg

# the type of action, the name of the service
ged_action=$1	
ged_name=$0	

# the ged lock file
ged_lock=/var/lock/subsys/ged

# the return value of this script
RETVAL=0

#------------------------------------------------------------
# is the network up ?
#------------------------------------------------------------
if [ ${NETWORKING} = "no" ]
then
	echo network service is down, please bring it up before lauching $ged_name
        exit 0
fi

#------------------------------------------------------------
# proc definitions
#------------------------------------------------------------

# start sequence
ged_start() 
{
	ged_status > /dev/null 2>&1
	[ $RETVAL -eq 0 ] && echo "ged is already running..." && exit 1
	printf "Starting up ged daemon : "
	${ged_bin} -c ${ged_cfg}
	sleep 1
	ged_status > /dev/null 2>&1
	[ ! $RETVAL -eq 0 ] && echo_failure && exit $RETVAL
        [ $RETVAL -eq 0 ] && touch $ged_lock && echo_success 
       	echo
}

# stop sequence
ged_stop() 
{
	printf "Shutting down ged daemon : "
	killproc ged
   	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ] && rm -f $ged_lock
	user="`grep ^uid ${ged_cfg} | awk '{print $2}'`"
	for i in `ipcs -s | grep ${user} | grep 666 | awk '{print $2}'`; do ipcrm -s $i; done
	sock="`grep ^listen ${ged_cfg} | grep / | awk '{print $2}'`"
	[ ! -z ${sock} ] && rm -rf ${sock}
}

# status request
ged_status()
{
	status ged
	RETVAL=$?
}

#------------------------------------------------------------
# action analyse
#------------------------------------------------------------
case $ged_action in
'start')
	ged_start
	;;
'stop')
	ged_stop
	;;
'status')
	ged_status
	;;
'restart')
	ged_stop
	[ $RETVAL -eq 0 ] && ged_start
	;;
*)
	echo "$ged_name : unknown request '$ged_action'."
	RETVAL=1
esac

exit $RETVAL
