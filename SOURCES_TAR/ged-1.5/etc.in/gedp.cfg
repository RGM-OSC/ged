# **********************************************************************************************
#                                 - GEDP configuration -
# **********************************************************************************************
#
# Copyright (C) 2007 Jérémie Bernard, Michaël Aubertin
#
# This package is free software; you can redistribute it and/or modify it under the terms of the 
# GNU General Public License as published by the Free Software Foundation; either version 2 of 
# the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this software; 
# if not, write to :
# Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
# **********************************************************************************************

#-----------------------------------------------------------------------------------------------
# packet types handling [mandatory]
#-----------------------------------------------------------------------------------------------
# syntax :
#	!!! IN A DISTRIBUTED CONFIGURATION, ALL OF THE GED INSTANCES SHOULD !!!
#	!!!    HAVE STRICTLY THE SAME POOL OF PACKET TYPES DEFINITIONS	    !!!
# 
# Defines the events structures the ged instance will handle
#
# <packet type="id" name="chain">
#	field_type "field_name1"
#      [field_type "field_name2" [META]]*
# </packet [counton="field_name1[,field_name2]*]">
#
# -> "id" must be a NON NULL POSITIVE INTEGER ( <= 0 ARE INTERNAL RESERVED VALUES )
#
# -> "chain" should name the packet type
#
# -> "field_type" might be one of the followings
#	STRING 	to match a n bytes null terminated string data
#	SINT32 	to match a signed 4 bytes data (-2147483648 [min] is a reserved value)
#	FLOAT64	to match a 8 bytes decimal data
#
# -> "field_name" should be a chain that names the given field
#
# -> "META" specifies whenever the field should be considered as a user meta data i.e. not 
#       updated by push requests until an update request occurs : push requests overwrite non 
#       user meta data, update requests overwite user meta data only (this may typically be used
#       to flag events in queue)
#
# -> "counton" specifies how a given packet should be uniquely identified i.e. the fields that
#    the ged backend should count occurences on

<packet type="1" name="nagios">
        STRING  "equipment"
        STRING  "service"
        SINT32  "state"
        STRING  "owner"		META
        STRING  "description"
        STRING  "ip_address"
        STRING  "host_alias"
        STRING  "hostgroups"
        STRING  "servicegroups"
        STRING  "comments"	META
</packet counton="equipment, service, state">

<packet type="2" name="snmptrap">
        STRING  "equipment"
        STRING  "service"
        SINT32  "state"
        STRING  "owner"		META
        STRING  "description"
        STRING  "ip_address"
        STRING  "host_alias"
        STRING  "hostgroups"
        STRING  "servicegroups"
        STRING  "comments"	META
</packet counton="equipment, service, state">

