# **********************************************************************************************
#                                - GED targets configuration -
# **********************************************************************************************
#
# Copyright (C) 2007 Jérémie Bernard, Michaël Aubertin
#
# This package is free software; you can redistribute it and/or modify it under the terms of the 
# GNU General Public License as published by the Free Software Foundation; either version 2 of 
# the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this software; 
# if not, write to :
# Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
# **********************************************************************************************

#-----------------------------------------------------------------------------------------------
# target(s) to relay events to [optional]
#-----------------------------------------------------------------------------------------------
# syntax :
# 			!!! FULL PATH TO FILES SHOULD BE SPECIFIED !!! 
#     		      If the target uses SSL the client must use SSL too
#
# [<relay_to>
#
# connect address:port
#  -> specifies the target the listener should relay to
#
# bind [address]
#  -> forces local interface to be used as source emission
#
# http_proxy [address:port]
#  -> specifies the http proxy the listener should passthru to relay to the specified "bind"
#
# http_proxy_auth [none|basic|ntlm]
#  -> specifies the http proxy authentification method to use when http_proxy is supplied, none
#     is default
#
# http_proxy_user login
#  -> specifies the supplied user login when authenticating to the given http_proxy i.e.
#     when http_proxy_auth differs from "none"; if so, SSL connection is implemented only
#
# http_proxy_pass nohash
#  -> specifies the supplied user password when authenticating to the given http_proxy i.e.
#     when http_proxy_auth differs from "none"; if so, SSL connection is implemented only
#
# ack_timeout [seconds]
#  -> specifies the maximum time in seconds the listener will be waiting for its target data 
#     reception ack while performing synchronizations (default is 5s)
#
# packets_pool [number]
#  -> specifies the maximum packets number each http request will encapsulate while performing 
#     synchronizations (default is 30)
#
# keep_alive [seconds]
#  -> specifies wether the connection will be persistent (>0) i.e. synchronous or not (0) i.e. 
#     asynchronous; if the connection is defined to be a persistent one, a heartbeating will be 
#     sended to the dedicated target every given "seconds" trying to keep the connection alive; 
#     if a disconnection occurs on a persistent connection, the sender thread will try to 
#     connect again undefinitively every given seconds too; when defining a persistent 
#     connection, the target will check the connection state every given seconds adding the 
#     specific ack_timeout value; default is to handle non persistent connections forwarding 
#     the data asynchronously (see the data_sync parameter)
#
# data_sync [seconds bytes]
#  -> this parameter specifies that the listener should check and forward any awaiting data to 
#     the dedicated target every given seconds or any given amount of bytes : if seconds equals 
#     0 the listener will forward the data only once the given amount of bytes has been reached, 
#     if bytes equals 0 the listener will forward the data once the time has ellapsed whatever 
#     the amount of bytes is, both can't be null; (default is 120 512) this parameter is 
#     meaningfull only when the connection is specified as an asynchronous one
#
# tls_ca_certificate [file]
#  -> specifies the file that contains certificates for all of the Certificate Authorities that
#     the sender recognizes
#
# tls_certificate [file]
#  -> specifies the file that contains the sender certificate
#
# tls_certificate_key [file]
#  -> specifies the file that contains the sender private key that matches the certificate 
#     stored in the tls_certificate file. The private key must not be protected with a password 
#     but the file access restricted if important
#
# tls_verify_peer [true|false]
#  -> specifies that the sender should request and verify the listener certificate (default is
#     false)
#
# tls_cipher_suite [chain]
#  -> configures what ciphers will be accepted and the preference order; "chain" should be a 
#     cipher specification for OpenSSL (see openssl ciphers -v)
#       ex: tls_cipher_suite HIGH:MEDIUM:+SSLv2
#
# http_command POST | GET
#  -> specifies the http command that should be filled in the sender http header
#
# http_version 1.0 | 1.1
#  -> specifies the http version that should be filled in the sender http header
#
# http_user_agent [chain]
#  -> if any, specifies the user-agent token that should be filled in the sender http header
#
# http_content_type image/jpeg | multipart/x-gzip [z_compression_level]
#  -> specifies the content type that should be filled in the sender http header; this field 
#     also defines the way the packets will be sended forward to the listener target while 
#     performing synchronizations : if a compression mime type is used, the packets will be 
#     compressed before beeing sended; in such a case, you may specify the associated zlib 
#     compression level (1 through 9, 1 is faster, 9 is smaller, 6 is default)
#
# </relay_to>]*

<relay_to>

	connect			192.168.1.1:2403
	bind
	ack_timeout		15

	data_sync		120 512
	packets_pool		30

	tls_ca_certificate
	tls_certificate
	tls_certificate_key
	tls_verify_peer
	tls_cipher_suite

	http_proxy
	http_proxy_auth
	http_proxy_user
	http_proxy_pass		

	http_command		POST
	http_version		1.1
	http_user_agent		
	http_content_type	multipart/x-gzip	9

</relay_to>

